service: frontpages-scraper

provider:
  name: aws
  region: us-east-1
  runtime: nodejs12.x

functions:
  scraper:
    name: front-pages-scraper
    handler: dist/scraper.handler
    environment:
      BUCKET_NAME: ${env:BUCKET_NAME}
      FRONT_PAGES_API_KEY: ${env:FRONT_PAGES_API_KEY}
      FRONT_PAGES_BASE_URL: ${env:FRONT_PAGES_BASE_URL}
    memorySize: 1536
    # When Heroku is up and running (not auto-sleeping), set this back to 60.
    timeout: 120
    role: frontPagesScraperRole
    layers:
      # This layer provides the `chrome-aws-lambda` library so that we can run
      # Puppeteer in Lambda.
      - arn:aws:lambda:us-east-1:764866452798:layer:chrome-aws-lambda:8

    package:
      exclude:
        - ./**
      include:
        - ./dist/scraper.js

    # The `chrome-aws-lambda` layer only supports Node 10, not Node 12.
    runtime: nodejs10.x

  trigger:
    name: front-pages-scraper-trigger
    handler: dist/trigger.handler
    environment:
      SCRAPER_FUNCTION_NAME: front-pages-scraper
    memorySize: 128
    # When Heroku is up and running (not auto-sleeping), set this back to 30.
    timeout: 90
    role: frontPagesScraperTriggerRole

    events:
      - schedule: rate(1 hour)

    package:
      exclude:
        - ./**
      include:
        - ./dist/trigger.js

plugins:
  - serverless-dotenv-plugin

package:
  exclude:
    - ./**
  include:
    - ./dist/**

resources:
  Resources:
    frontPagesScraperRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: frontPagesScraperRole
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: sts:AssumeRole
        Policies:
          - PolicyName: frontPagesScraperRolePolicy
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - logs:CreateLogGroup
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                  Resource:
                    - 'Fn::Join':
                        - ':'
                        - - 'arn:aws:logs'
                          - Ref: 'AWS::Region'
                          - Ref: 'AWS::AccountId'
                          - 'log-group:/aws/lambda/*:*:*'
                - Effect: 'Allow'
                  Action:
                    - 's3:PutObject'
                  Resource:
                    Fn::Join:
                      - ''
                      - - 'arn:aws:s3:::'
                        - 'Ref': 'ServerlessDeploymentBucket'
                - Effect: 'Allow'
                  Action:
                    - 's3:ListBucket'
                  Resource: 'arn:aws:s3:::${env:BUCKET_NAME}'
                - Effect: 'Allow'
                  Action:
                    - 's3:PutObject'
                  Resource: 'arn:aws:s3:::${env:BUCKET_NAME}'

    frontPagesScraperTriggerRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: frontPagesScraperTriggerRole
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: sts:AssumeRole
        Policies:
          - PolicyName: frontPagesScraperTriggerRolePolicy
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: 'Allow'
                  Action:
                    - 'lambda:InvokeFunction'
                  Resource:
                    {
                      'Fn::Join':
                        [
                          ':',
                          [
                            'arn:aws:lambda',
                            { 'Ref': 'AWS::Region' },
                            { 'Ref': 'AWS::AccountId' },
                            'function:front-pages-scraper',
                          ],
                        ],
                    }
                - Effect: Allow
                  Action:
                    - logs:CreateLogGroup
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                  Resource:
                    - 'Fn::Join':
                        - ':'
                        - - 'arn:aws:logs'
                          - Ref: 'AWS::Region'
                          - Ref: 'AWS::AccountId'
                          - 'log-group:/aws/lambda/*:*:*'
                - Effect: 'Allow'
                  Action:
                    - 's3:PutObject'
                  Resource:
                    Fn::Join:
                      - ''
                      - - 'arn:aws:s3:::'
                        - 'Ref': 'ServerlessDeploymentBucket'
